<?xml version="1.0" encoding="UTF-8" ?>
<ContentPage
    x:Class="ICU.Planner.Pages.PatientOverviewPage"
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:controls="clr-namespace:ICU.Planner.Controls"
    xmlns:converters="clr-namespace:ICU.Planner.Converters"
    xmlns:xct="http://xamarin.com/schemas/2020/toolkit"
    x:Name="this"
    Title="{Binding Title}"
    IsBusy="{Binding IsBusy}">

    <ContentPage.Resources>
        <converters:TestConverter x:Key="testConverter" />
    </ContentPage.Resources>

    <ScrollView>
        <StackLayout
            Padding="5"
            Orientation="Vertical"
            Spacing="15">

            <!--  Patient Info  -->
            <Frame
                Padding="0"
                BackgroundColor="White"
                HasShadow="True">
                <xct:Expander x:Name="personalInfoExpander" ForceUpdateSizeCommand="{Binding PersonalInfoForceUpdateSizeCommand}">
                    <xct:Expander.Header>
                        <Grid Padding="15,20" ColumnDefinitions="*,Auto">
                            <Label FontFamily="RM" Text="Personal Information" />

                            <controls:ExpanderIconView Grid.Column="1" IsExpanded="{Binding IsExpanded, Source={Reference personalInfoExpander}}" />

                        </Grid>
                    </xct:Expander.Header>

                    <StackLayout
                        Padding="5"
                        Orientation="Vertical"
                        Spacing="5">

                        <controls:PatientView IsEnabled="False" Patient="{Binding Patient}" />

                        <!--  Button is displayed when expander is collapsed  -->
                        <Button
                            Command="{Binding EditPatientCommand}"
                            Style="{StaticResource EditButtonStyle}"
                            Text="Edit Personal Information" />

                    </StackLayout>
                </xct:Expander>

            </Frame>

            <!--  Main Goal  -->
            <Frame
                Padding="0"
                BackgroundColor="White"
                HasShadow="True">

                <xct:Expander x:Name="mainGoalExpander" ForceUpdateSizeCommand="{Binding MainGoalForceUpdateSizeCommand}">
                    <xct:Expander.Header>
                        <Grid Padding="15,20" ColumnDefinitions="*,Auto">

                            <Label FontFamily="RM" Text="Main Goal" />

                            <controls:ExpanderIconView Grid.Column="1" IsExpanded="{Binding IsExpanded, Source={Reference mainGoalExpander}}" />

                        </Grid>
                    </xct:Expander.Header>

                    <StackLayout
                        Padding="5"
                        Orientation="Vertical"
                        Spacing="5">

                        <Grid ColumnDefinitions="*,Auto">

                            <Label Text="{Binding Patient.MainGoal.Value}" />

                            <!--  Display the Remove button only when a Main Goal is present  -->
                            <Button
                                Grid.Column="1"
                                Command="{Binding DeleteGoalCommand}"
                                CommandParameter="{Binding Patient.MainGoal}"
                                IsVisible="{Binding Patient.MainGoal, Converter={xct:IsNotNullOrEmptyConverter}}"
                                Style="{StaticResource IconDeleteButtonStyle}" />

                        </Grid>

                        <!--  Label for when no Main Goal is present  -->
                        <Label
                            HorizontalOptions="Center"
                            HorizontalTextAlignment="Center"
                            IsVisible="{Binding Patient.MainGoal, Converter={xct:IsNullOrEmptyConverter}}"
                            Text="No main goal found." />

                        <Button
                            Command="{Binding AddMainGoalCommand}"
                            Style="{StaticResource AddButtonStyle}"
                            Text="Add Main Goal" />
                    </StackLayout>
                </xct:Expander>
            </Frame>

            <!--  Mini Goals  -->
            <Frame
                Padding="0"
                BackgroundColor="White"
                HasShadow="True">
                <xct:Expander x:Name="miniGoalsExpander" ForceUpdateSizeCommand="{Binding MiniGoalsForceUpdateSizeCommand}">
                    <xct:Expander.Header>
                        <Grid Padding="15,20" ColumnDefinitions="*,Auto">

                            <Label FontFamily="RM" Text="Mini Goals" />

                            <controls:ExpanderIconView Grid.Column="1" IsExpanded="{Binding IsExpanded, Source={Reference miniGoalsExpander}}" />

                        </Grid>
                    </xct:Expander.Header>

                    <StackLayout
                        Padding="5"
                        Orientation="Vertical"
                        Spacing="5">

                        <StackLayout BindableLayout.ItemsSource="{Binding Patient.MiniGoals}" Spacing="5">

                            <BindableLayout.EmptyView>
                                <Label Text="No mini goals found." />
                            </BindableLayout.EmptyView>

                            <BindableLayout.ItemTemplate>
                                <DataTemplate>
                                    <Grid ColumnDefinitions="*,Auto">
                                        <Label Text="{Binding Value}" />
                                        <Button
                                            Grid.Column="1"
                                            Command="{Binding BindingContext.DeleteGoalCommand, Source={RelativeSource Mode=FindAncestor, AncestorType={Type ContentPage}}}"
                                            CommandParameter="{Binding}"
                                            Style="{StaticResource IconDeleteButtonStyle}" />
                                    </Grid>
                                </DataTemplate>
                            </BindableLayout.ItemTemplate>

                        </StackLayout>

                        <Button
                            Command="{Binding AddGoalCommand}"
                            Style="{StaticResource AddButtonStyle}"
                            Text="Add Mini Goal" />
                    </StackLayout>
                </xct:Expander>
            </Frame>

            <!--  CPAX  -->
            <Frame
                Padding="0"
                BackgroundColor="White"
                HasShadow="True">
                <xct:Expander x:Name="cpaxExpander" ForceUpdateSizeCommand="{Binding CpaxForceUpdateSizeCommand}">
                    <xct:Expander.Header>
                        <Grid Padding="15,20" ColumnDefinitions="*,Auto">
                            <Label FontFamily="RM" Text="CPAX" />

                            <controls:ExpanderIconView Grid.Column="1" IsExpanded="{Binding IsExpanded, Source={Reference cpaxExpander}}" />

                        </Grid>
                    </xct:Expander.Header>

                    <StackLayout
                        Padding="5"
                        Orientation="Vertical"
                        Spacing="25">

                        <Button
                            Command="{Binding SaveCpaxCommand}"
                            Style="{StaticResource SaveButtonStyle}"
                            Text="Save CPAX values" />

                        <controls:CpaxView CurrentCpax="{Binding BindingContext.CurrentCPAX, Source={Reference this}}" GoalCpax="{Binding BindingContext.GoalCPAX, Source={Reference this}}" />

                        <Button
                            Command="{Binding SaveCpaxCommand}"
                            Style="{StaticResource SaveButtonStyle}"
                            Text="Save CPAX values" />

                    </StackLayout>
                </xct:Expander>

            </Frame>

            <!--  Images by category  -->
            <StackLayout BindableLayout.ItemsSource="{Binding Patient.Images}" Spacing="15">
                <BindableLayout.ItemTemplate>
                    <DataTemplate>
                        <!--  Image Category  -->
                        <Frame
                            Padding="0"
                            BackgroundColor="White"
                            HasShadow="True">
                            <xct:Expander x:Name="imagesExpander">
                                <xct:Expander.Header>

                                    <Grid Padding="15,20" ColumnDefinitions="*,Auto">

                                        <Label FontFamily="RM" Text="{Binding Name}" />

                                        <controls:ExpanderIconView Grid.Column="1" IsExpanded="{Binding IsExpanded, Source={Reference imagesExpander}}" />


                                    </Grid>
                                </xct:Expander.Header>

                                <!--  images for current category  -->
                                <StackLayout
                                    Padding="5"
                                    Orientation="Vertical"
                                    Spacing="5">
                                    <FlexLayout
                                        AlignItems="Start"
                                        BindableLayout.ItemsSource="{Binding ImageFiles}"
                                        Direction="Row"
                                        HorizontalOptions="Fill"
                                        JustifyContent="SpaceAround"
                                        Wrap="Wrap">

                                        <BindableLayout.EmptyView>
                                            <Label Text="No images found." />
                                        </BindableLayout.EmptyView>

                                        <BindableLayout.ItemTemplate>
                                            <DataTemplate>
                                                <!--  Image  -->
                                                <Frame
                                                    Margin="4"
                                                    Padding="4"
                                                    BorderColor="LightGray">

                                                    <AbsoluteLayout HeightRequest="{OnIdiom Default=250, Phone=150}" WidthRequest="{OnIdiom Default=250, Phone=150}">
                                                        <Image
                                                            AbsoluteLayout.LayoutBounds="0,0,1,1"
                                                            AbsoluteLayout.LayoutFlags="All"
                                                            Aspect="AspectFill"
                                                            Source="{Binding Uri}" />

                                                        <Button
                                                            Padding="2"
                                                            AbsoluteLayout.LayoutBounds=".90,.90,50,50 "
                                                            AbsoluteLayout.LayoutFlags="PositionProportional"
                                                            Command="{Binding BindingContext.DeleteImageCommand, Source={RelativeSource Mode=FindAncestor, AncestorType={Type ContentPage}}}"
                                                            CommandParameter="{Binding}"
                                                            Style="{StaticResource IconDeleteButtonStyle}" />

                                                    </AbsoluteLayout>
                                                </Frame>
                                            </DataTemplate>
                                        </BindableLayout.ItemTemplate>
                                    </FlexLayout>
                                    <Button
                                        Grid.Column="1"
                                        Command="{Binding BindingContext.AddImageCommand, Source={RelativeSource Mode=FindAncestor, AncestorType={Type ContentPage}}}"
                                        CommandParameter="{Binding}"
                                        Style="{StaticResource AddButtonStyle}" />
                                </StackLayout>

                            </xct:Expander>
                        </Frame>
                    </DataTemplate>
                </BindableLayout.ItemTemplate>

            </StackLayout>

        </StackLayout>
    </ScrollView>
</ContentPage>
